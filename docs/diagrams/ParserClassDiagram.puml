@startuml

hide circles
skinparam classAttributeIconSize 0

class Parser {
    + parseInput(input: String)
    - getCommandFromInput(input: String)
    - validateStringInput(parsedString: String)
    - validateIntegerInput(parsedInteger: String)
    - validateDoubleInput(parsedDouble: String)
    - validateAndCreateExitCommand(input: String)
    - validateAndCreateListCommand(parsed: ArrayList<String>)
    - validateAndCreateInflowCommand(parsed: ArrayList<String>)
    - validateAndCreateOutflowCommand(parsed: ArrayList<String>)
    - validateAndCreateDeleteCommand(parsed: ArrayList<String>)
    - validateAndCreateEditCommand(parsed: ArrayList<String>)
    - validateAndCreateNewCommand(parsed: ArrayList<String>)
    - validateAndCreateFindCommand(parsed: ArrayList<String>)
    - validateAndCreateHistoryCommand(parsed: ArrayList<String>)
    - matchAndParseInput(input: String, pattern: Pattern, numOfArgs: int)
}

class StockPal
class XYZCommand
class Ui

XYZCommand : + execute()
Ui : + getUserInput()

StockPal --> Parser: passes user input to >
StockPal ..> Ui: gets user input from >
Parser ..> XYZCommand: creates >

note top of XYZCommand
This is a placeholder command class
for the specific commands
end note

@enduml
