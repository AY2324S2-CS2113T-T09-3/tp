@startuml

hide circles
skinparam classAttributeIconSize 0

class Parser {
    + parseInput(input: String)
    - parseInteger(intString: String)
    - parsePrice(priceString: String)
    - validatePrice(input: String)
    - validatePid(input: String)
    - validateAmount(input: String)
    - validateQuantity(input: String)
    - validateString(input: String)
    - createExitCommand(input: String)
    - createListCommand(input: String)
    - createOutflowCommand(input: String)
    - createInflowCommand(input: String)
    - createDeleteCommand(input: String)
    - createEditCommand(input: String)
    - createNewCommand(input: String)
    - createHistoryCommand(input: String)
    - createHelpCommand(input: String)

}

class StockPal
class XYZCommand
class Ui

XYZCommand : + execute()
Ui : + getUserInput()

StockPal --> Parser: passes user input to >
StockPal ..> Ui: gets user input from >
Parser ..> XYZCommand: creates >

note top of XYZCommand
This is a placeholder command class
for the specific commands

Based on the type of command in user input,
the corresponding Command will be created.
end note

@enduml
